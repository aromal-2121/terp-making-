name: Repack TWRP

on:
  workflow_dispatch:

jobs:
  repack:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y python3 python3-pip cpio

    - name: Download working mkbootimg tool
      run: |
        mkdir tools
        curl -L -o tools/mkbootimg.py https://raw.githubusercontent.com/osm0sis/mkbootimg/master/mkbootimg.py
        chmod +x tools/mkbootimg.py

    - name: Repack TWRP image
      run: |
        mkdir -p output
        tools/mkbootimg.py \
          --kernel repack/zImage \
          --ramdisk repack/twrp-ramdisk.img \
          --cmdline "$(grep 'cmdline' repack/bootimg.cfg | cut -d= -f2-)" \
          --base "$(grep 'base' repack/bootimg.cfg | cut -d= -f2)" \
          --pagesize "$(grep 'pagesize' repack/bootimg.cfg | cut -d= -f2)" \
          --board "$(grep 'board' repack/bootimg.cfg | cut -d= -f2-)" \
          --kernel_offset "$(grep 'kernel_offset' repack/bootimg.cfg | cut -d= -f2)" \
          --ramdisk_offset "$(grep 'ramdisk_offset' repack/bootimg.cfg | cut -d= -f2)" \
          --tags_offset "$(grep 'tags_offset' repack/bootimg.cfg | cut -d= -f2)" \
          --os_version "$(grep 'os_version' repack/bootimg.cfg | cut -d= -f2)" \
          --os_patch_level "$(grep 'os_patch_level' repack/bootimg.cfg | cut -d= -f2)" \
          -o output/new-twrp.img

    - name: Upload repacked TWRP image
      uses: actions/upload-artifact@v4
      with:
        name: new-twrp
        path: output/new-twrp.img
